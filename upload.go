package malwarebazaar

import (
	"bytes"
	"context"
	"crypto/md5"
	"encoding/json"
	"fmt"
	"io"
	"io/ioutil"
	"mime/multipart"
	"net/http"
)

// UploadFile takes the file contents passed any uploads it to malware bazaar with the given fields set. This function doesn't have the ability to set comments or context for the sample
func UploadFile(ctx context.Context, httpCli http.Client, filename string, contentsReader io.Reader, anonymous bool, tags []string, deliveryMethod string, apikey string) ([]byte, error) {
	contents, err := ioutil.ReadAll(contentsReader)
	if err != nil {
		return nil, err
	}

	if filename == "" {
		filename = fmt.Sprintf("%x", md5.Sum(contents))
	}

	body := &bytes.Buffer{}
	writer := multipart.NewWriter(body)
	fw, err := writer.CreateFormFile("file", filename)
	if err != nil {
		return nil, err
	}

	_, err = io.Copy(fw, bytes.NewBuffer(contents))
	if err != nil {
		return nil, err
	}

	optionsw, err := writer.CreateFormField("json_data")
	if err != nil {
		return nil, err
	}

	options := &upload{}
	if anonymous {
		options.Anonymous = 1
	} else {
		options.Anonymous = 0
	}

	options.Tags = tags
	options.DeliveryMethod = deliveryMethod

	marshalledJSON, err := json.Marshal(options)
	if err != nil {
		return nil, err
	}

	_, err = io.Copy(optionsw, bytes.NewBuffer(marshalledJSON))
	if err != nil {
		return nil, err
	}

	err = writer.Close()
	if err != nil {
		return nil, err
	}

	request, err := http.NewRequestWithContext(ctx, http.MethodPost, baseURL, body)
	if err != nil {
		return nil, err
	}

	if apikey != "" {
		request.Header.Add(apiKeyHeader, apikey)
	}
	request.Header.Add("Content-Type", writer.FormDataContentType())

	response, err := httpCli.Do(request)
	if err != nil {
		return nil, err
	}

	resp, err := ioutil.ReadAll(response.Body)
	if err != nil {
		return nil, err
	}
	defer response.Body.Close()

	if response.StatusCode != http.StatusOK {
		return nil, fmt.Errorf("invalid response code: %d", response.StatusCode)
	}

	return resp, nil
}
